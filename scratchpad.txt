//Algorithm
    throw exception
    if source is not connected to anything
    if destination is not connected to anything

// Errors that can happen when parsing
    -No cost given for edge
    -different edge costs
        e.g.
        A
            10 B
        B
            20 A
    


//optimization
what i could do instead of finding Node/Edge every getOrAdd();
    -just add all of the node/edges first and then remove duplicate from them

I should not be doing inline in Utils.hpp,
    -but if the Util function increases I will create a separate .cpp for Utils

I do not know a better way to test Or design Parser, currently

how do i want to handle file that do not exists
    -Create a file and check if its a valid file and act accordingly.
    // https://stackoverflow.com/questions/1647557/ifstream-how-to-tell-if-specified-file-doesnt-exist
    -for now lets just ignore it

there is primitive obsession when passing filesPaths
    -In my opinion there should be a File class that handles that.
    -but for now let it remain as it is.

refactor Dijkstra.cpp into smaller functions

currently getShortestPathFromDestination() return vector by copy should i return it by reference
    -I think it should be returning by copy only
    -so when Dijkstra class is destroyed the shortest path still remains in the calling code
        as its returned by copying

i should not be doing 'using namespace std' anywhere but let's for now let them remain in .cpp as they are
not included anywhere; in my opinion they do not pollute other files like headers.


i am currently trying to do manual memory allocation
change it to automatic with smart pointers

do i want to use member initializers?

should replace transverseList in Dijkstra to std::list as removing elements can be expensive if done frequently

// could use iterator based loop in getSmallestFromTransverseList


assertEqualNodeVector and assertEqualEdgeVector are repeated over in testGraph

todo
// there should be a fail fast in addEdge() if edge does not contain this node
// i just debugged for 2 hours man 
// fail fast is very important

//fail fast if both nodes are same in edge; 
    -it requires to throw exception from constructor...
    -any other way?